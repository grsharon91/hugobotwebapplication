@model HugoBotWebApplication.ViewModels.DatasetIndexViewModel

@{
	ViewBag.Title = "Index";
}

@*<h2>Data sets</h2>*@
<br />
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.18/css/dataTables.bootstrap4.min.css" />

@*<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.18/css/jquery.dataTables.css" />*@
<style>
	/*#example_previous a {
		background-color: black;
	}

	#example_next a {
		background-color: red;
	}

	.dataTables_wrapper .dataTables_paginate .paginate_button:hover {
		background: none;
		color: black !important;
		border-radius: 4px;
		border: 1px solid #828282;
	}

	.dataTables_wrapper .dataTables_paginate .paginate_button:active {
		background: none;
		color: black !important;
	}

	.pagination > li > a, .pagination > li > span {
		background-color: red
	}

	.pagination > li.active > a, .pagination > li.active > span {
		background-color: green
	}*/

	table.dataTable thead th {
		border-bottom: 0;
	}

	table.dataTable.no-footer {
		border-bottom: 0;
	}

	table.dataTable tfoot th {
		border-top: 0;
	}

	.ui-datatable.borderless thead th,
	.ui-datatable.borderless tbody,
	.ui-datatable.borderless tbody tr,
	.ui-datatable.borderless tbody td {
		border-style: none;
	}

	.filterable {
		margin-top: 15px;
	}

		.filterable .panel-heading .pull-right {
			margin-top: -20px;
		}

		.filterable .filters input[disabled] {
			background-color: transparent;
			border: none;
			cursor: auto;
			box-shadow: none;
			padding: 0;
			height: auto;
		}

			.filterable .filters input[disabled]::-webkit-input-placeholder {
				color: #333;
			}

			.filterable .filters input[disabled]::-moz-placeholder {
				color: #333;
			}

			.filterable .filters input[disabled]:-ms-input-placeholder {
				color: #333;
			}

	.rating {
		unicode-bidi: bidi-override;
		direction: rtl;
	}

		.rating > span {
			display: inline;
			position: relative;
			width: 1.1em;
		}

			.rating > span:hover:before,
			.rating > span:hover ~ span:before {
				content: "\2605";
				position: absolute;
			}

    .wrap {
        width: 100%;
        height: 30px;
        z-index: -2;
        white-space: nowrap;
        overflow: hidden;

    }

        .wrap div:first-child {
            margin-left: -2%;
        }

        .wrap div{
            margin-left: 1%;
        }

    .prog {
        margin: 0;
        margin-left: 0.5%;
        height: 30px;
        width: 25%;
        position: relative;
        display: inline-block;
        text-align: center;
        color: white;
        line-height: 30px;
        transition: all 0.8s;

    }

        .prog:before,
        .prog:after {
            content: "";
            position: absolute;
            transition: all 0.8s;
            z-index: -1;
        }

        .prog:before {
            height: 50%;
            width: 100%;
            top: 0;
            left: 0;
            background: rgb(57,73,90);
            -webkit-transform: skew(45deg);
            -moz-transform: skew(45deg);
            transform: skew(45deg);
        }

        .prog:after {
            height: 50%;
            width: 100%;
            top: 50%;
            left: 0;
            background: rgb(57,73,90);
            -webkit-transform: skew(-45deg);
            -moz-transform: skew(-45deg);
            transform: skew(-45deg);
        }


</style>

    <div>
        <div class="wrap">
            <div class="prog"> Dataset Upload </div>
            <div class="prog"> Temporal Abstraction </div>
            <div class="prog"> Time Intervals Mining </div>
            <div class="prog"> Visualization </div>
        </div>
    </div>

<br />

	<div class="row">
		<div class="col-md-12">
			<div class="card filterable">
				<div class=".card-header bg-primary" style="color:white">
					<div class="float-right">
						<button class="btn btn-primary btn-sm btn-filter">
							<span class="fas fa-filter"> </span>
							Filter
						</button>
					</div>
				</div>

				<div class="card-body" >
					<h4 class="card-title">Datasets</h4>
                    <p style="display:inline">
                        <button title="Upload new Dataset" class="btn btn-sm btn-warning" type="button" onclick="location.href='@Url.Action("Create", "Datasets")'"> <span class="fas fa-upload"> </span> Upload Dataset </button>
                        <button title="Show only private datasets" class="btn btn-sm btn-primary" type="button" onclick="location.href='@Url.Action("Index","Datasets")'"> Show only private datasets </button>



                    </p>
                    <div class="table d-md-table d-lg-table d-sm-table table-responsive-md table-responsive-lg table-responsive-sm col-md-12 col-sm-12 col-lg-12">
                        <table id="DatasetsTable" class="d-md-table table table-responsive table-hover table-striped">
                            <thead>
                                <tr class="filters">
                                    <th>
                                    </th>
                                    <th>
                                        <input type="text" class="form-control" placeholder="DatasetName" disabled>
                                    </th>
                                    <th>
                                        <input type="text" class="form-control" placeholder="Category" disabled>

                                    </th>

                                    <th>
                                        <input type="text" class="form-control" placeholder="Size" disabled>
                                    </th>
                                    <th>
                                        <input type="text" class="form-control" placeholder="Owner" disabled>
                                    </th>
                                    <th><input type="text" class="form-control" placeholder="Visibility" disabled> </th>


                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Datasets)
                                {
                                    if (item.Visibility == "Public" || (item.Owner != null && item.Owner.Email == User.Identity.Name) || User.Identity.Name == "hugobotsupp@gmail.com")
                                    {
                                        <tr>
                                            <td>
                                                @Html.CheckBox("DatasetsRecords", false, new { @ID = "dataset_" + item.DatasetID, @value = item.DatasetID })
                                            </td>
                                            <td style="cursor: pointer" onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'">
                                                @Html.DisplayFor(modelItem => item.DatasetName)
                                            </td>

                                            <td style="cursor: pointer" onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'">
                                                @Html.DisplayFor(modelItem => item.Category)
                                            </td>


                                            <td onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'" style="cursor: pointer">
                                                @Math.Round(item.Size, 3) MB
                                            </td>


                                            @if (item.Owner == null)
                                            {
                                                <td>No Owner</td>
                                            }
                                            else
                                            {
                                                <td style="cursor: pointer" onclick="window.location.href=@Url.Action("Details", "Datasets", new { id=item.DatasetID})'" onho>
                                                    @item.Owner.FirstName &nbsp; @item.Owner.LastName
                                                </td>
                                            }

                                            <td style="cursor: pointer" onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'">
                                                @Html.DisplayFor(modelItem => item.Visibility)
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        foreach (var vp in Model.ViewPermissionsRecords)
                                        {
                                            if (vp.UserName == User.Identity.Name && vp.DatasetID == item.DatasetID)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.CheckBox("DatasetsRecords", false, new { @ID = "dataset_" + item.DatasetID, @value = item.DatasetID })
                                                    </td>
                                                    <td style="cursor: pointer" onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'">
                                                        @Html.DisplayFor(modelItem => item.DatasetName)
                                                    </td>

                                                    <td style="cursor: pointer" onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'">
                                                        @Html.DisplayFor(modelItem => item.Category)
                                                    </td>


                                                    <td onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'" style="cursor: pointer">
                                                        @Math.Round(item.Size, 3) MB
                                                    </td>


                                                    @if (item.Owner == null)
                                                    {
                                                        <td>No Owner</td>
                                                    }
                                                    else
                                                    {
                                                        <td style="cursor: pointer" onclick="window.location.href=@Url.Action("Details", "Datasets", new { id=item.DatasetID})'" onho>
                                                            @item.Owner.FirstName &nbsp; @item.Owner.LastName
                                                        </td>
                                                    }

                                                    <td style="cursor: pointer" onclick="window.location.href='@Url.Action("Details", "Datasets", new { id=item.DatasetID})'">
                                                        @Html.DisplayFor(modelItem => item.Visibility)
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    }



                                }
                            </tbody>
                            <tfoot>

                            </tfoot>
                        </table>

                    </div>
				</div>
			</div>
		</div>

	</div>
</div>

@section Scripts {
	<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
	<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.min.js"></script>
	@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>*@
	<script type="text/javascript" src="https://cdn.datatables.net/1.10.18/js/dataTables.bootstrap4.min.js"></script>


	<script>
		$(document).ready(function () {
			$("#DatasetsTable").DataTable({
				"searching": false,
				"pageLength": 5,
				"ordering": false,
				"lengthChange": false,
				"language": {
					"info": "Showing _START_ - _END_ out of _TOTAL_ datasets"
				}

			});

			$("#Upload").prop("disabled", true);
			$("#LoadingLabel").hide();
			$("#CategoryDropDown").val("");
			$('table td input').each(function () {
				if (this.type == "checkbox") {
					$(this).attr('checked', false);
					console.log(this.value, this.attributes, $(this).is(":checked"));

				}
			});
			$('.filterable .btn-filter').click(function () {
				var $panel = $(this).parents('.filterable'),
					$filters = $panel.find('.filters input'),
					$tbody = $panel.find('.table tbody');
				if ($filters.prop('disabled') == true) {
					$filters.prop('disabled', false);
					$filters.first().focus();
				} else {
					$filters.val('').prop('disabled', true);
					$tbody.find('.no-result').remove();
					$tbody.find('tr').show();
				}
			});
			$('.filterable .filters input').keyup(function (e) {
				/* Ignore tab key */
				var code = e.keyCode || e.which;
				if (code == '9') return;
				/* Useful DOM data and selectors */
				var $input = $(this),
					inputContent = $input.val().toLowerCase(),
					$panel = $input.parents('.filterable'),
					column = $panel.find('.filters th').index($input.parents('th')),
					$table = $panel.find('.table'),
					$rows = $table.find('tbody tr');
				/* Dirtiest filter function ever ;) */
				var $filteredRows = $rows.filter(function () {
					var value = $(this).find('td').eq(column).text().toLowerCase();
					return value.indexOf(inputContent) === -1;
				});
				/* Clean previous no-result if exist */
				$table.find('tbody .no-result').remove();
				/* Show all rows, hide filtered ones (never do that outside of a demo ! xD) */
				$rows.show();
				$filteredRows.hide();
				/* Prepend no-result row if all rows are filtered */
				if ($filteredRows.length === $rows.length) {
					$table.find('tbody').prepend($('<tr class="no-result text-center"><td colspan="' + $table.find('.filters th').length + '">No result found</td></tr>'));
				}
			});
		});

	</script>

	<script>
        function downloadDatasets() {

            var datasetRecordsChecked = [];
			var discretizationRecordsChecked = [];
			var karmaLegoRecordsChecked = [];
            var datasetRecords = document.getElementsByName("DatasetsRecords");
            var discretizationRecords = document.getElementsByName("DiscretizationRecords");
			var karmaLegoRecords = document.getElementsByName("KarmaLegoRecords");
            for (var i = 0; i < datasetRecords.length; i++) {
                if (datasetRecords[i].checked) {
                    datasetRecordsChecked.push(datasetRecords[i].value);
                }
            }
            for (var i = 0; i < discretizationRecords.length; i++) {
                if (discretizationRecords[i].checked) {
                    discretizationRecordsChecked.push(discretizationRecords[i].value);
                }
			}
			for (var i = 0; i < karmaLegoRecords.length; i++) {
				if (karmaLegoRecords[i].checked) {
					karmaLegoRecordsChecked.push(karmaLegoRecords[i].value);
				}
			}
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Download","Datasets")',
                datatype: 'JSON',
                data: {
                    DatasetsRecords: datasetRecordsChecked, DiscretizationsRecords: discretizationRecordsChecked,
                    KarmaLegoRecords: karmaLegoRecordsChecked
                },
                success: function (returnValue) {

                    window.location = "/hugobot/Datasets/DownloadFiles?parameters=" + returnValue;
                },
                error: function () {
                    alert("Oops! Something went wrong");
                }
            });

         
        }

	</script>
	<script>
		function fchange(x) {
			console.log(x)
			var abstractionMethodName = $("#DiscretizationMethods_" + x + " option:selected").text();
			console.log(abstractionMethodName);
			var downloadPath = $('#downloadDatasetButton').attr("onclick");
			downloadPath = "location.href='/Download/" + x + "?method=" + abstractionMethodName + "'";
			console.log(downloadPath);
			$('#downloadDatasetButton_' + x).attr("onclick", downloadPath);
			console.log(downloadPath);



		}
	</script>

	<script>
		function myFunction() {
			// Declare variables
			var input, filter, table, tr, td, i;
			input = document.getElementById("myInput");
			filter = input.value.toUpperCase();
			table = document.getElementById("DatasetsTable");
			tr = table.getElementsByTagName("tr");

			// Loop through all table rows, and hide those who don't match the search query
			for (i = 0; i < tr.length; i++) {
				td = tr[i].getElementsByTagName("td")[1];
				tdCategory = tr[i].getElementsByTagName("td")[2];
				if (td) {
					if (td.innerHTML.toUpperCase().indexOf(filter) > -1 || tdCategory.innerHTML.toUpperCase().indexOf(filter) > -1) {
						tr[i].style.display = "";
					} else {
						tr[i].style.display = "none";
					}
				}

			}
		}
	</script>

	>
}
