
@{
	ViewBag.Title = "First steps with HugoBot";
}
<style>
    .bulletClass {
        padding: 3px 0px 0px 20px;
    }
</style>
<div class="container">
    <h3>First steps with HugoBot</h3>
    <hr />
    @*<hr />
        Welcome to Hugobot, your center for temporal data research.
        <br />
        In order to use the website you need to follow the following steps:
        <br />
        (1) Register to the website
        <br />
        (2) Confirm your email
        <br />
        (3) Wait for confirmation by the website support
        <br />
        For more questions and more information , send an email to
        <a href="mailto:hugobotsupp@gmail.com">hugobotsupp@gmail.com</a><br />*@
    <div class="row">
        <div class="col-md-12">
            You’re a data scientist and you’ve made significant progress in your research -
            the process of collecting and normalizing data has been completed and you’ve decided discretization
            is the next step prior to learning on your data. Luckily, you’ve heard of HugoBot™, a web application
            that services a discretization suite fit for your purposes, so now you must <a target="_blank" href="/Account/Register">register</a> to the website and get approved and then format your data according to HugoBot’s™ format.
            <br />
            <br />
            <h4>Transitioning between formats</h4>
            For the purposes of demonstration, assume you’ve got a dataset measuring the bodily effects of kissing and being exposed to your loved one as a function of time, where the features are beats per minute, bodily temperature and pupil dilation. If we were attempting to predict the subject’s gender according to their reaction, we might also have a gender class variable.
            <br />
            <br />A feasible representation of the data might be as follows:
            <hr style="margin: 4px;visibility:hidden;" />
            <div class="text-center">
                <img src="~/Images/toy_example.PNG" />
            </div>
            <br />To transition to HugoBot’s format, we must dissect our data and map each feature to its equivalent form in HugoBot’s format.
            <br />
            <br />A record in HugoBot is composed of the following fields:
            <ul class="col-md-12 bulletClass">
                <li class="bulletClass">
                    Entity ID - The ID of the subject, or entity on which the recordings are made. An example could be an individual patient, individual object etc.
                </li>
                <li class="bulletClass">
                    Temporal Property ID -
                    The ID of the variable that measures the state of a certain feature on the current entity. <br />
                    An example could be <strong>Patient</strong> (our entity) <strong>Temperature</strong> (our feature).
                </li>
                <li class="bulletClass">
                    Timestamp - A whole, non-negative number that is used to describe the current time point in which the measurements are made.
                </li>
                <li class="bulletClass">
                    Temporal Property Value - The current value of the temporal property in our entity at the current timestamp. For example, our patients temperature at time 0 could be 36.7 degrees celsius.
                </li>
            </ul>
            <br />


        </div>

    </div>
    <div class="row">
        <div class="col-md-12">
            <h4>Time to TimeStamp</h4>
            Now that we’ve defined the HugoBot fields, we must map our dataset to the new format. Our first step would be to define how do we transition our <strong>“Time”</strong> record into a <strong>TimeStamp</strong>.
            &nbsp;Since the highest resolution in our dataset is a measurement per minute, we’ll define our 0th TimeStamp as 14-08-18 10:00:00 and define the TimeStamp to be the difference in minutes between the current date and our 0th TimeStamp. Therefore, 14-08-18 10:00:03 will be defined as <strong>TimeStamp 3</strong>.
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <h4>Subject ID to Entity ID</h4>
            As mentioned before, each entity is basically an independent object on which measurements are made. Therefore, subject ID fits the bill perfectly and we can directly use our subject ID as entity ID.
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <h4>Features to Temporal Property ID</h4>
            By looking at our dataset, we can understand that BPM, Body Temperature and Pupil Dilation are all <strong>time-dependent measurements</strong> on an entity, while Subject Gender is a <strong>time-independent</strong> measurement and is our representative class variable. HugoBot uses whole non-negative numbers as ids for temporal properties while using whole negative numbers as ids for class variables.  We can map the property names to arbitrary numbers so long as we follow the previous constraint, so we’ll use the following mapping:
            <hr style="margin: 4px;visibility:hidden;" />
            <div class="text-center">
                <img src="~/Images/toy_vmap.PNG" />
            </div>
            <br />
            In addition to being helpful for us to keep record of our mapping, this comma-delimited csv is also fed to the system when sending a discretization request.

        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <h4>Actual Data to Temporal Property Value</h4>
            When we’ve completed the mapping of the previous fields, we can now progress to actually mapping our data to a data-row in the HugoBot™ format. Each cell of our temporal properties is directly mapped to a row in HugoBot, where the cell value is used as the final value in the row. Hence, the measurement of pupil dilation at time 14-08-18 10:00:02 of subject 1 will translate to the following data row: 1,3,2,5.
            <br />Class variables are kept for each entity and recorded once at time 0. Thus, by arbitrarily mapping male to value 0 and female to value 1 our class variables will be recorded in the following rows: 1,-1,0,0 for subject 1 and 2,-1,0,1 for subject 2.
            <br />
            <br />We can now make our comma-delimited csv file in HugoBot’s format. We should prepend the file with the header <strong>EntityID,TemporalPropertyID,TimeStamp,TemporalPropertyValue</strong> prior to translating our data. <br />For our toy dataset, this should be the final result:
            <hr style="margin: 4px;visibility:hidden;" />
            <div class="text-center">
                <img src="~/Images/toy_hugo_example.PNG" />
            </div>
            <br />
            Now, after registering and being approved we can upload our dataset for discretization!

        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <h4>(Optional) Entities File</h4>
            The system can make use of an entity demographics file describing various demographic features on our dataset. Unlike other files, this file is only constrained by being a comma-delimited csv file and having a descriptive header for each demographic feature, where the first column is the id column. For example:
            <hr style="margin: 4px;visibility:hidden;" />
            <div class="text-center">
                <img src="~/Images/Toy_Entity.PNG" />
            </div>
            <br />
            can be representative of our dataset.
            <br />
            <br />This demographic file is useful for finding how different patterns are related to certain demographic features in the visualization process.

        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <h4>Appendix - Used Files</h4>
            <a href="/Datasets/DownloadExampleOriginalDataset">Original Dataset</a> <br />
            <a href="/Datasets/DownloadExampleHugoDataset">Formatted Dataset</a> <br />
            <a href="/Datasets/DownloadExampleVariableMap">Variable Map</a> <br />
            <a href="/Datasets/DownloadExampleEntitiesFile">Entities File</a>
        </div>
    </div>
    <br />
    <br />
</div>


@section Scripts {
<script>
	$(document).ready(function () {
		$('[data-toggle="tooltip"]').tooltip();
	});
</script>
}
